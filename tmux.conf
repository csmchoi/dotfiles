# Set prefix to Ctrl-Space
unbind C-b
set -g prefix C-Space

# Reload tmux configuration
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..." \; move-window -r

# mouse mode on by-default
set -g mouse on

# colorize messages in the command line
set -g message-bg colour3
set -g message-fg colour0
set -g message-attr bright

# visual notification of activity in other windows
set -g monitor-activity on
set -g visual-activity off

# improve colors
set -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"
set -as terminal-overrides ',xterm*:sitm=\E[3m'

# act like vim
setw -g mode-keys vi
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Smart pane switching with awareness of vim splits
# See this blog post for additional detail:
# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# increase scrollback lines
set -g history-limit 10000

# switch to last pane
bind-key C-a last-pane

# bind resizing of panes to H,J,K,L (resizes by steps of 10 lines/columns)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# more intuitive keybindings for splitting
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

set -s escape-time 0

bind b break-pane -d
bind-key j command-prompt -p "join pane from:" "join pane -h -s '%%'"

bind c new-window -c "#{pane_current_path}"

bind-key C-Space send-keys -R

# Make C-j display a selectable list of sessions
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Provide access to the clipboard for pbpaste, pbcopy (details: http://goo.gl/DN82E)
set-option -g default-command "reattach-to-user-namespace -l zsh"
set-window-option -g automatic-rename on

# =====================================
# Status Bar
# =====================================
set -g status on                # turn the status bar on
set -g status-justify left

# session-name | hostname       list of windows         date | time
set -g status-bg colour0
set -g status-left "#[bg=colour8,fg=colour10] #S "
set -g status-left-length 70
set -g status-right-length 70
set -g status-right "#[bg=colour8,fg=colour10,bold] #h "

# window status
setw -g window-status-format "#[fg=colour15,bg=colour8,none] #I #[bg=colour8,fg=colour15,none] #W "
setw -g window-status-current-format "#[bg=colour0,fg=colour3,none] #I #[fg=3,bg=colour0,none] #W "

# set the pane border colors
set -g pane-border-fg colour0
set -g pane-border-bg default
set -g pane-active-border-fg colour1
set -g pane-active-border-bg default
